{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","avatar","src","alt","MsgCloud","name","message","time","AlternativeMessage","messageData","altMessageData","HW1","SuperButton","red","restProps","finalClassName","btn","Affair","affair","affairPriorityWrapper","affairName","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","todo","affairs","controlPanel","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","t","Error","filterAffairs","body","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","placeholder","finalInputClassName","formFieldError","formField","formGroup","id","e","currentTarget","value","formLabel","htmlFor","Greeting","setNameCallback","addUser","totalUsers","greeting","counter","wrapper","charCode","GreetingContainer","users","addUserCallback","setName","setError","length","addName","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","checked","check","HW4","text","setText","showAlert","setChecked","bodyBlock","column","App","container","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.76532daa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__l4fwN\",\"todo\":\"Affairs_todo__3tWLv\",\"affairs\":\"Affairs_affairs__HryGq\",\"affair\":\"Affairs_affair__179X1\",\"affairName\":\"Affairs_affairName__36syi\",\"affairPriorityWrapper\":\"Affairs_affairPriorityWrapper__3ohrb\",\"priority\":\"Affairs_priority__3sWkT\",\"btn\":\"Affairs_btn__2fsK5\",\"controlPanel\":\"Affairs_controlPanel__-KI7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"MsgCloud\":\"Message_MsgCloud__2iVXX\",\"Message\":\"Message_Message__28P02\",\"avatar\":\"Message_avatar__3FT3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"body\":\"Greeting_body__1uV80\",\"greeting\":\"Greeting_greeting__21ydZ\",\"wrapper\":\"Greeting_wrapper__3Dbfg\",\"counter\":\"Greeting_counter__2pKsv\",\"error\":\"Greeting_error__1uvQ8\",\"btn\":\"Greeting_btn__1zEPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\",\"formGroup\":\"SuperInputText_formGroup__2ZGsZ\",\"formField\":\"SuperInputText_formField__2v_EU\",\"formLabel\":\"SuperInputText_formLabel__36rR_\",\"formFieldError\":\"SuperInputText_formFieldError__2I0O4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyBlock\":\"HW4_bodyBlock__tCzvY\",\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"checkbox\":\"HW4_checkbox__2jLC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"check\":\"SuperCheckbox_check__2kWCJ\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\",\"container\":\"App_container__3ntu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"SuperButton_red__1kaz_\",\"btn\":\"SuperButton_btn__3MgTu\"};","import React from \"react\";\nimport s from \"./Message.module.css\"\nimport {MessageType} from \"./HW1\";\n\n\nfunction Message(props: MessageType) {\n\n    return (\n        <div className={s.Message}>\n            <img className={s.avatar} src={props.avatar} alt=\"avatar\"/>\n            <div className={s.MsgCloud}>\n                <h3>{props.name}</h3>\n                <p>{props.message}</p>\n                <time>{props.time}</time>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport {MessageType} from \"./HW1\";\nimport s from \"./Message.module.css\"\n\nfunction AlternativeMessage(props: MessageType) {\n    return (\n        <div className={s.Message}>\n            <img className={s.avatar} src={props.avatar} alt=\"avatar\"/>\n            <div className={s.MsgCloud}>\n                <h3>{props.name}</h3>\n                <p>{props.message}</p>\n                <time>{props.time}</time>\n            </div>\n        </div>\n    );\n}\n\nexport default AlternativeMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport s from \"./Message.module.css\"\nimport AlternativeMessage from \"./AlternativeMessage\";\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nconst altMessageData = {\n    avatar: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTPsV0Gjy9q6uTSI_pO3o7SivkvMnNFmZj5ow&usqp=CAU\",\n    name: \"Maxim\",\n    message: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit\",\n    time: \"22:12\",\n}\n\nexport interface MessageType {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string\n}\n\nfunction HW1() {\n    return (\n        <div className={s.message}>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessage\n            avatar={altMessageData.avatar}\n            name={altMessageData.name}\n            message={altMessageData.message}\n            time={altMessageData.time}\n            />\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${className} ${red ? s.red : s.btn}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps}// отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {\n        props.deleteAffairCallback(props.affair._id)\n    };\n\n    return (\n        <div>\n            <li className={s.affair}>\n                <div className={s.affairPriorityWrapper}>\n\n                    <span className={s.affairName}>{props.affair.name}<sup className={s.priority}>{props.affair.priority}</sup></span>\n                </div>\n                <SuperButton className={s.btn} onClick={deleteCallback}>X</SuperButton>\n            </li>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from \"./Affairs.module.css\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    };\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    };\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    };\n    const setLow = () => {\n        props.setFilter(\"low\")\n    };\n\n    return (\n        <div className={s.todo}>\n            <ul className={s.affairs}>{mappedAffairs}</ul>\n            {/*<button className={s.myButton} onClick={setAll}>All</button>*/}\n            {/*<button className={s.myButton} onClick={setHigh}>High</button>*/}\n            {/*<button className={s.myButton} onClick={setMiddle}>Middle</button>*/}\n            {/*<button className={s.myButton} onClick={setLow}>Low</button>*/}\n            <div className={s.controlPanel}><SuperButton onClick={setAll}>All</SuperButton>\n                <SuperButton onClick={setHigh}>High</SuperButton>\n                <SuperButton onClick={setMiddle}>Middle</SuperButton>\n                <SuperButton onClick={setLow}>Low</SuperButton></div>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\nimport s from \"./Affairs.module.css\"\n\n// types\nexport type AffairPriorityType = \"high\" | \"middle\" | \"low\"; //Приоритетные дела\nexport type AffairType = { //Дела\n    _id: number,\n    name: string,\n    priority: string\n}\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"Anime\", priority: \"low\"},\n    {_id: 3, name: \"Games\", priority: \"low\"},\n    {_id: 4, name: \"Work\", priority: \"high\"},\n    {_id: 5, name: \"HTML & CSS\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === \"all\") return affairs;\n\n    if (filter === \"high\") {\n        return affairs.filter(t => (t.priority === \"high\"))\n    }\n    if (filter === \"middle\") {\n        return affairs.filter(t => (t.priority === \"middle\"))\n    }\n    if (filter === \"low\") {\n        return affairs.filter(t => (t.priority === \"low\"))\n    }\n    throw new Error(\"передан не корректный список\")\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => affairs.filter((t: AffairType)=> (t._id !== _id))\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // Хук состояния дел\n    const [filter, setFilter] = useState<FilterType>(\"all\"); // Хук состояния фильтров\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\n\n    return (\n        <div className={s.body}>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    placeholder?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,placeholder,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? `${s.formFieldError}` : `${s.formField}`; // need to fix with (?:) and s.superInput\n\n\n    return (\n        <div className={s.formGroup}>\n            <input\n                id=\"lineInput\"\n                placeholder=\"Name\"\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            <label className={s.formLabel} htmlFor=\"lineInput\">{placeholder}</label>\n            {/*{error && <span className={finalSpanClassName}>{error}</span>}*/}\n        </div>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent} from \"react\";\nimport s from \"./Greeting.module.css\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (name: ChangeEvent<HTMLInputElement>)=> void\n    addUser: ()=> void\n    error: string\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n\n    const onPressHandler = (e: React.KeyboardEvent<HTMLInputElement>)=>{\n        if(e.charCode === 13){\n            addUser()\n        }\n    }\n\n    return (\n        <div className={s.greeting}>\n            <span className={s.counter}>{totalUsers}</span>\n            <div className={s.wrapper}>\n                {/*<input value={name} onChange={setNameCallback} className={inputClass}/>*/}\n                <SuperInputText className={s.formField} onKeyPress={onPressHandler} error={error} value={name} onChange={setNameCallback} placeholder={\"Name\"}/>\n                {/*<button className={s.myButton} onClick={addUser}>add</button>*/}\n                <SuperButton className={s.btn} onClick={addUser}>add</SuperButton>\n            </div>\n                <span className={s.error}>{error}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\");\n    const [error, setError] = useState<string>(\"\");\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        const addName = e.currentTarget.value\n        setName(addName);\n        if(addName !== \"\") {\n            setError(\"\")\n        } else {\n            setError(\"Enter your name\")\n        }\n    };\n    const addUser = () => {\n        if (name !== \"\") {\n            alert(`Hello ${name} !`);\n            addUserCallback(name)\n        } else {\n            setError(\"Enter your name\")\n        }\n        setName(\"\")\n    };\n\n    let totalUsers = users.length;\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport { v1 } from \"uuid\";\nimport s from \"./Greeting.module.css\"\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\n// types\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]);\n\n    const addUserCallback = (name: string) => {\n        const newUser: UserType = {_id: v1(), name: name}\n        setUsers([newUser, ...users]);\n    }\n\n    return (\n        <div className={s.body}>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange\n        && onChange(e);\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={finalInputClassName}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                // className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.check}></span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div className={s.bodyBlock}>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    placeholder={\"Input\"}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    // red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <div className={s.checkbox}><SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                    {/*// onChange тоже должен работать*/}\n                    <SuperCheckbox checked={checked} onChange={testOnChange}/></div>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div className={s.container}>\n                <div>react homeworks:</div>\n                <HW1/>\n                <HW2/>\n                <HW3/>\n                <HW4/>\n\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}